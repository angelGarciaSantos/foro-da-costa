{"version":3,"sources":["Components/Post.js","Components/PostsList.js","Components/NavbarBoot.js","Components/PostDetail.js","Assets/Logo.jpg","Components/CreatePost.js","Components/ForumContainer.js","index.js"],"names":["Post","props","post","user","_id","title","date","content","fDate","Moment","format","className","onClick","openPostDetailProps","PostsList","posts","map","NavbarBoot","Navbar","bg","expand","Brand","href","class","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","Divider","PostDetail","getPostById","useParams","deletePost","bind","CreatePost","useForm","register","handleSubmit","watch","errors","formState","console","log","onSubmit","data","createNewPost","required","type","ForumContainer","useState","setPosts","history","useHistory","getPosts","fetch","then","response","json","useEffect","exact","path","push","value","method","res","text","newDate","Date","newPost","uuidv4","requestOptions","headers","body","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbbd6f03.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\n//import styles from \"./TodoItem.module.css\"\r\nimport Moment from 'moment';\r\nimport tachyons from 'tachyons';\r\n\r\nconst Post = props => {\r\n  // const [editing, setEditing] = useState(false)\r\n\r\n  // const handleEditing = () => {\r\n  //   setEditing(true)\r\n  // }\r\n\r\n  // const handleUpdatedDone = event => {\r\n  //   if (event.key === \"Enter\") {\r\n  //     setEditing(false)\r\n  //   }\r\n  // }\r\n\r\n  // const completedStyle = {\r\n  //   fontStyle: \"italic\",\r\n  //   color: \"#595959\",\r\n  //   opacity: 0.4,\r\n  //   textDecoration: \"line-through\",\r\n  // }\r\n\r\n  const { user, _id, title, content, date } = props.post\r\n\r\n  // let viewMode = {}\r\n  // let editMode = {}\r\n\r\n  // if (editing) {\r\n  //   viewMode.display = \"none\"\r\n  // } else {\r\n  //   editMode.display = \"none\"\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     console.log(\"Cleaning up...\")\r\n  //   }\r\n  // }, [])\r\n\r\n  let fDate = Moment(date).format('DD/MM/YYYY');\r\n\r\n  return (\r\n    <li className=\"tc pa3 center b--dashed bw1 b--black-30 dim mv2\" onClick={() => props.openPostDetailProps(_id)}>\r\n      <p className=\"courier f4\">{title}</p>\r\n      <p className=\"courier f5\">por {user}, {fDate} </p>\r\n    </li>\r\n\r\n    // <li className={styles.item}>\r\n    //   <div onDoubleClick={handleEditing} style={viewMode}>\r\n    //     <input\r\n    //       type=\"checkbox\"\r\n    //       className={styles.checkbox}\r\n    //       checked={completed}\r\n    //       onChange={() => props.handleChangeProps(id)}\r\n    //     />\r\n    //     <button onClick={() => props.deleteTodoProps(id)}>\r\n    //     <FaTrash style={{ color: \"orangered\", fontSize: \"16px\" }} />\r\n    //     </button>\r\n    //     <span style={completed ? completedStyle : null}>{title}</span>\r\n    //   </div>\r\n    //   <input\r\n    //     type=\"text\"\r\n    //     style={editMode}\r\n    //     className={styles.textInput}\r\n    //     value={title}\r\n    //     onChange={e => {\r\n    //       props.setUpdate(e.target.value, id)\r\n    //     }}\r\n    //     onKeyDown={handleUpdatedDone}\r\n    //   />\r\n    // </li>\r\n  )\r\n}\r\n\r\nexport default Post","import React from \"react\"\r\nimport Post from \"./Post\"\r\n\r\nconst PostsList = props => {\r\n  return (\r\n    <ul>\r\n      {props.posts.map(post => (\r\n        <Post\r\n          key={post._id}\r\n          post={post}\r\n          openPostDetailProps={props.openPostDetailProps}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\nexport default PostsList","import React, { useState, useEffect } from \"react\"\r\n//import styles from \"./TodoItem.module.css\"\r\nimport Moment from 'moment';\r\nimport tachyons from 'tachyons';\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst NavbarBoot = props => {\r\n\r\n\r\n  return (\r\n<Navbar bg=\"light\" expand=\"lg\">\r\n\r\n        <Navbar.Brand className=\"courier\" href=\"#/\">\r\n        <i class=\"fi-rr-glasses\"></i>\r\n        {/* <img\r\n            src={Logo}\r\n            width=\"75\"\r\n            height=\"75\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"React Bootstrap logo\"\r\n        /> */}\r\n            Foro da Costa\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#/\" className=\"courier\" >Inicio</Nav.Link>\r\n            <Nav.Link href=\"#link\" className=\"courier\" >Mensajes</Nav.Link>\r\n            <NavDropdown title=\"Opciones\" id=\"basic-nav-dropdown\" className=\"courier\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n            </NavDropdown>\r\n            </Nav>\r\n            {/* <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Sech\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-success\">Sch</Button>\r\n            </Form>  */}\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default NavbarBoot","import React, { useState, useEffect } from \"react\"\r\n//import styles from \"./TodoItem.module.css\"\r\nimport Moment from 'moment';\r\nimport tachyons from 'tachyons';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst PostDetail = props => {\r\n    function GetRouteParams() {\r\n        let { id } = useParams();\r\n\r\n        return (id);\r\n    }\r\n\r\n    const { user, _id, title, content, date } = props.getPostById(GetRouteParams());\r\n\r\n    let fDate = Moment(date).format('DD/MM/YYYY');\r\n\r\n  return ( //TODO: detect if the post from the url does not exist, and show an error message.\r\n      <div className=\"tc pa3 center b--dashed bw1 b--black-30 dim ma4\">\r\n        <p className=\"courier f4 tc\">{title}</p>\r\n        <p className=\"courier f5\">{content}</p>\r\n        <p className=\"courier f6 tc\">por {user}, {fDate} </p>\r\n        <a className=\"courier f6 link dim ba ph3 pv2 mb2 dib mid-gray\" onClick={props.deletePost.bind(this, _id)}>Eliminar</a>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default PostDetail","export default __webpack_public_path__ + \"static/media/Logo.ae621407.jpg\";","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport tachyons from 'tachyons';\r\n\r\nconst CreatePost = props => {\r\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n  const onSubmit = data => {\r\n    console.log(data)\r\n    props.createNewPost(data);\r\n};\r\n\r\n  console.log(watch(\"title\")); // watch input value by passing the name of it\r\n  console.log(watch(\"content\")); // watch input value by passing the name of it\r\n\r\n  return (\r\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\r\n    <form className=\"courier tc\" onSubmit={handleSubmit(onSubmit)}>\r\n      {/* register your input into the hook by invoking the \"register\" function */}\r\n      {/* <input defaultValue=\"test\" {...register(\"example\")} /> */}\r\n      <label className=\"courier pa3\">Titulo</label>\r\n      {/* include validation with required or other standard HTML validation rules */}\r\n      <input className=\"courier\"{...register(\"title\", { required: true })} />\r\n      {/* errors will return when field validation fails  */}\r\n      {errors.title && <span>Debes introducir un título</span>}\r\n      <label className=\"courier pa3\">Contenido</label>\r\n      {/* include validation with required or other standard HTML validation rules */}\r\n      <input className=\"courier\" {...register(\"content\", { required: true })} />\r\n      {/* errors will return when field validation fails  */}\r\n      {errors.content && <span>Debes introducir algún contenido</span>}\r\n      \r\n      <input className=\"courier\" type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreatePost","import React, { useState, useEffect } from \"react\"\r\nimport PostsList from \"./PostsList\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport Navbar from './NavbarBoot';\r\nimport Logo from '../Assets/Logo.jpg'\r\nimport PostDetail from \"./PostDetail\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n// import { Button } from 'react-bootstrap';\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport tachyons from 'tachyons';\r\n\r\nconst ForumContainer = () => {\r\n  const [posts, setPosts] = useState([])\r\n  const history = useHistory();\r\n\r\n  \r\n   function getInitialPosts() {\r\n//     // getting stored items\r\n//     // const temp = localStorage.getItem(\"todos\")\r\n//     // const savedTodos = JSON.parse(temp)\r\n//     // return savedTodos || []\r\n\r\n//     // console.log(\"Obteniendo info del API\");\r\n//     // fetch('https://api-rest-example-21.herokuapp.com/api/post')\r\n//     // .then(response => response.json())\r\n//     // .then(data => {\r\n\r\n//     //     console.log(\"PROBANDO\");\r\n//     //     //setPosts(data.posts);\r\n//     //     setPosts(data.posts);\r\n\r\n//     //     return data.posts;\r\n//     });\r\n    //mockup posts\r\n    // let newDate = new Date()\r\n    // return [{id: 1, \r\n    //     title: \"Empieza la temporada de setas.\", \r\n    //     content: \"His audiam deserunt in, eum ubique voluptatibus te. In reque dicta usu. Ne rebum dissentiet eam, vim omnis deseruisse id. Ullum deleniti vituperata at quo, insolens complectitur te eos, ea pri dico munere propriae. Vel ferri facilis ut, qui paulo ridens praesent ad. Possim alterum qui cu. Accusamus consulatu ius te, cu decore soleat appareat usu.\",\r\n    //     user: \"Ángel\", \r\n    //     date: newDate},\r\n    //     {id: 2, \r\n    //     title: \"Tremendo tractor teño, entrade a ver fotitos\", \r\n    //     content: \"His audiam deserunt in, eum ubique voluptatibus te. In reque dicta usu. Ne rebum dissentiet eam, vim omnis deseruisse id. Ullum deleniti vituperata at quo, insolens complectitur te eos, ea pri dico munere propriae. Vel ferri facilis ut, qui paulo ridens praesent ad. Possim alterum qui cu. Accusamus consulatu ius te, cu decore soleat appareat usu.\",\r\n    //     user: \"Mario\", \r\n    //     date: newDate},\r\n    //     {id: 3, \r\n    //     title: \"You, unha pizza non é cena nin é nada\", \r\n    //     content: \"His audiam deserunt in, eum ubique voluptatibus te. In reque dicta usu. Ne rebum dissentiet eam, vim omnis deseruisse id. Ullum deleniti vituperata at quo, insolens complectitur te eos, ea pri dico munere propriae. Vel ferri facilis ut, qui paulo ridens praesent ad. Possim alterum qui cu. Accusamus consulatu ius te, cu decore soleat appareat usu.\",\r\n    //     user: \"Pitiño\", \r\n    //     date: newDate},\r\n    //     {id: 4, \r\n    //     title: \"Informe desde Ukraine\", \r\n    //     content: \"His audiam deserunt in, eum ubique voluptatibus te. In reque dicta usu. Ne rebum dissentiet eam, vim omnis deseruisse id. Ullum deleniti vituperata at quo, insolens complectitur te eos, ea pri dico munere propriae. Vel ferri facilis ut, qui paulo ridens praesent ad. Possim alterum qui cu. Accusamus consulatu ius te, cu decore soleat appareat usu.\",\r\n    //     user: \"Juan\", \r\n    //     date: newDate},\r\n    //     {id: 5, \r\n    //     title: \"Tades no asador migus?\", \r\n    //     content: \"His audiam deserunt in, eum ubique voluptatibus te. In reque dicta usu. Ne rebum dissentiet eam, vim omnis deseruisse id. Ullum deleniti vituperata at quo, insolens complectitur te eos, ea pri dico munere propriae. Vel ferri facilis ut, qui paulo ridens praesent ad. Possim alterum qui cu. Accusamus consulatu ius te, cu decore soleat appareat usu.\",\r\n    //     user: \"Santi\", \r\n    //     date: newDate},\r\n    //     ]\r\n  }\r\n\r\n    const openPostDetail = id => {\r\n        history.push(`/post/${id}`);\r\n    }\r\n\r\n    const getPostById = id => {\r\n        let value = -1; //TODO: if -1 prepare a not found post page\r\n        posts.map(post => {\r\n            if (post._id == id) {\r\n                value = post;\r\n            }\r\n        });\r\n\r\n        return value;\r\n    }\r\n\r\n    const createPost = () => {\r\n        history.push(`/new`);\r\n    }\r\n\r\n    const createNewPost = (data) => {\r\n        let newDate = new Date()\r\n        const newPost = {\r\n          id: uuidv4(),\r\n          title: data.title,\r\n          content: data.content,\r\n          user: \"Anónimo\",\r\n          date: newDate,\r\n        }\r\n        setPosts([...posts, newPost]);\r\n\r\n\r\n        // POST request using fetch inside useEffect React hook\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(newPost)\r\n        };\r\n        fetch('https://api-rest-example-21.herokuapp.com/api/post', requestOptions)\r\n            .then(response => response.json())\r\n            //.then(data => setPostId(data.id));\r\n            .then(data => {\r\n                getPosts();\r\n                history.push(`/`);\r\n            });\r\n\r\n    }\r\n\r\n    const deletePost = (id) => {\r\n        console.log(`Deleting post: ${id}`);\r\n        fetch(`https://api-rest-example-21.herokuapp.com/api/post/${id}`, {\r\n            method: 'DELETE',\r\n            })\r\n            .then(res => res.text()) // or res.json()\r\n            .then(res => {\r\n                console.log(res);\r\n                getPosts();\r\n                history.push(`/`); \r\n            })\r\n    }\r\n\r\n    const getPosts = () => {\r\n        console.log(\"Obteniendo info del API\");\r\n        fetch('https://api-rest-example-21.herokuapp.com/api/post')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            //setPosts(data.posts);\r\n            console.log(`Posts received: ${data.posts}`);\r\n            setPosts(data.posts);\r\n    \r\n            return data.posts;\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    },[]);\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <Switch>\r\n        <Route exact path=\"/\">     \r\n            <PostsList\r\n                posts={posts}\r\n                openPostDetailProps={openPostDetail}\r\n            />\r\n            \r\n            <div className=\"tc\">\r\n                <a className=\"courier f6 link dim ba ph3 pv2 mb2 dib mid-gray\" onClick={createPost}>Crear nuevo tema</a>\r\n            </div>\r\n        </Route>\r\n        <Route path={\"/post/:id\"} >     \r\n            <PostDetail\r\n                getPostById={getPostById}  \r\n                deletePost={deletePost}          \r\n            />\r\n        </Route>\r\n        <Route path={\"/new\"} >     \r\n            <CreatePost\r\n                createNewPost={createNewPost}\r\n            \r\n            />\r\n        </Route>\r\n        {/* <Route path=\"/about\">\r\n            <About />\r\n        </Route>\r\n        <Route path=\"*\">\r\n            <NotMatch />\r\n        </Route> */}\r\n    </Switch>  \r\n    </>\r\n  )\r\n}\r\nexport default ForumContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { HashRouter as Router } from \"react-router-dom\"\r\nimport ForumContainer from \"./Components/ForumContainer\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <Router>\r\n        <ForumContainer />\r\n      </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n  )"],"sourceRoot":""}